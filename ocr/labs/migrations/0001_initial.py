# Generated by Django 2.1.2 on 2019-05-17 05:25

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import labs.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('usertype', models.IntegerField(choices=[(0, 'Admin'), (1, 'Lab Access'), (2, 'Project Access')], verbose_name='user type')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(max_length=100, verbose_name='created by')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created at')),
                ('modified_by', models.CharField(max_length=60, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=labs.models.file_directory_path)),
                ('file_status', models.FileField(upload_to=labs.models.saved_file_directory_path)),
                ('modified_by', models.CharField(max_length=60, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labname', models.CharField(max_length=100, verbose_name='labname')),
            ],
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
                ('created_by', models.CharField(max_length=100, verbose_name='created by')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created at')),
                ('modified_by', models.CharField(max_length=60, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoginTrail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=60)),
                ('ip', models.CharField(max_length=32)),
                ('status', models.CharField(choices=[('success', 'success'), ('failed', 'failed')], default='failed', max_length=10)),
                ('secure', models.CharField(choices=[('True', 'True'), ('False', 'False')], default='False', max_length=5)),
                ('server_name', models.CharField(default='unknown', max_length=30)),
                ('server_port', models.IntegerField(default=0)),
                ('device', models.CharField(default='unknown', max_length=42)),
                ('model', models.CharField(blank=True, max_length=42)),
                ('brand', models.CharField(blank=True, max_length=42)),
                ('browser', models.CharField(default='unknown', max_length=42)),
                ('os', models.CharField(default='unknown', max_length=42)),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100, verbose_name='project name')),
                ('description', models.CharField(max_length=200, verbose_name='Project Description')),
                ('created_by', models.CharField(max_length=100, verbose_name='created by')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='created at')),
                ('modified_by', models.CharField(max_length=60, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('lab_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labs.Lab')),
            ],
        ),
        migrations.AddField(
            model_name='labels',
            name='project_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labs.Projects'),
        ),
        migrations.AddField(
            model_name='files',
            name='project_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labs.Projects'),
        ),
        migrations.AddField(
            model_name='access',
            name='project_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labs.Projects'),
        ),
        migrations.AddField(
            model_name='access',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='lab_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='labs.Lab'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
